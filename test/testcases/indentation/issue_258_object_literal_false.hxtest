{
	"lineEnds": {
		"leftCurly": "both"
	},
	"indentation": {
		"indentObjectLiteral": false
	},
	"sameLine": {
		"returnBody": "keep",
		"returnBodySingleLine": "keep",
		"expressionIf": "keep"
	}
}

---

class Main {
	public static function main() {
		var fixes = [
			for (key in map.keys())
				if (key.code == DKUnusedImport)
					{range: patchRange(doc, key.range), newText: ""}
		];
		var fixes = [
			for (key in map.keys())
				if (key.code == DKUnusedImport)
					{range: patchRange(doc, key.range), newText: "", range: patchRange(doc, key.range), newText: ""}
		];
		var e1 = macro if (1) 2;
		var e2 = macro if (1) 2 else 3;
		return
			{
				foo: 10
			};
	}
}

---

class Main
{
	public static function main()
	{
		var fixes = [
			for (key in map.keys())
				if (key.code == DKUnusedImport)
					{range: patchRange(doc, key.range), newText: ""}
		];
		var fixes = [
			for (key in map.keys())
				if (key.code == DKUnusedImport)
				{
					range: patchRange(doc, key.range),
					newText: "",
					range: patchRange(doc, key.range),
					newText: ""
				}
		];
		var e1 = macro if (1) 2;
		var e2 = macro if (1) 2 else 3;
		return
		{
			foo: 10
		};
	}
}
